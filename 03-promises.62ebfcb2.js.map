{"mappings":"AAAAA,QAAQC,IAAI,GAEZ,MAAMC,EAASC,SAASC,cAAc,SACtCJ,QAAQC,IAAIC,GACZG,KAAKC,iBAAiB,SAAUC,GAChCF,KAAKC,iBAAiB,QAASE,UAK/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACdC,KAAKC,SAC3BC,YAAW,KACS,GAKjB,IAAK,IAIV,SAASR,EAAcS,EAAUC,GAGTJ,KAAKC,Q,CAL7Bd,QAAQC,IAAIQ,GAaZF,IACGW,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBjB,QAAQC,IAAI,uBAAqBe,QAAiBC,MAAU,IAE7DE,OAAM,EAACH,SAAEA,EAAQC,MAAEA,MAClBjB,QAAQC,IAAI,sBAAoBe,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["console.log(1);\n\nconst formEl = document.querySelector('.form');\nconsole.log(formEl);\nform.addEventListener('submit', createPromise);\nform.addEventListener('input', callback);\n\n\n\n\nconst promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n     if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n  }, 1000)\n});\nconsole.log(promise)\n\nfunction createPromise(position, delay) {\n  // preventDefault();\n\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["console","log","$47d4ff9957288465$var$formEl","document","querySelector","form","addEventListener","$47d4ff9957288465$var$createPromise","callback","$47d4ff9957288465$var$promise","Promise","resolve","reject","Math","random","setTimeout","position","delay","then","catch"],"version":3,"file":"03-promises.62ebfcb2.js.map"}